name: CI for iOS

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build:
    runs-on: macos-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20.14.0'

      - name: Install npm dependencies
        run: |
          cd ConnectedToCulture
          npm install

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '2.7'

      - name: Install Bundler
        run: gem install bundler -v 2.3.26

      - name: Install CocoaPods
        run: |
          sudo gem install cocoapods

      - name: Reinstall CocoaPods
        run: |
          cd ConnectedToCulture/ios
          rm -rf Pods
          pod install --repo-update
          pod --version

      - name: Ensure scripts have execute permissions
        run: |
          find ConnectedToCulture/ios/Pods -name '*.sh' -exec chmod +x {} \;

      - name: Create Provisioning Profiles directory
        run: mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles

      - name: Decode and Install Provisioning Profile
        env:
          IOS_PROVISIONING_PROFILE: ${{ secrets.IOS_PROVISIONING_PROFILE }}
        run: |
          echo "$IOS_PROVISIONING_PROFILE" | base64 --decode > ~/Library/MobileDevice/Provisioning\ Profiles/ConnectedToCulture_C2C_ad_hoc.mobileprovision

      - name: Decode and Install Certificate
        env:
          IOS_CERTIFICATE: ${{ secrets.IOS_CERTIFICATE }}
          IOS_CERTIFICATE_PASSWORD: ${{ secrets.IOS_CERTIFICATE_PASSWORD }}
        run: |
          echo "$IOS_CERTIFICATE" | base64 --decode > certificate.p12
          security import certificate.p12 -P "$IOS_CERTIFICATE_PASSWORD" -A

      - name: Clean Derived Data
        run: |
          rm -rf ~/Library/Developer/Xcode/DerivedData

      - name: Increment build number
        run: |
          cd ConnectedToCulture/ios
          agvtool new-version -all $(date +%Y%m%d%H%M)

      - name: Build app
        run: |
          cd ConnectedToCulture/ios
          ls -alh
          set -o pipefail && xcodebuild -workspace ConnectedToCulture.xcworkspace \
                                        -scheme ConnectedToCulture \
                                        -sdk iphoneos \
                                        -configuration Release \
                                        -archivePath ${{ github.workspace }}/build/ConnectedToCulture.xcarchive \
                                        clean archive \
                                        CODE_SIGN_STYLE=Manual \
                                        CODE_SIGN_IDENTITY="Apple Distribution" \
                                        PROVISIONING_PROFILE_SPECIFIER="ConnectedToCulture_C2C_ad_hoc" \
                                        DEVELOPMENT_TEAM="24832U2HJT" \
                                        PRODUCT_BUNDLE_IDENTIFIER="com.ConnectedToCulture.C2C" \
                                        > ${{ github.workspace }}/xcodebuild.log
          xcodebuild -exportArchive \
                     -archivePath ${{ github.workspace }}/build/ConnectedToCulture.xcarchive \
                     -exportOptionsPlist ${{ github.workspace }}/ConnectedToCulture/ios/exportOptions.plist \
                     -exportPath ${{ github.workspace }}/build \
                     >> ${{ github.workspace }}/xcodebuild.log

      - name: Check generated files
        run: ls -alh ${{ github.workspace }}/build

      - name: Upload xcodebuild.log as artifact
        uses: actions/upload-artifact@v2
        with:
          name: xcodebuild-log
          path: ${{ github.workspace }}/xcodebuild.log

      - name: Set up Firebase CLI
        run: curl -sL https://firebase.tools | bash

      - name: Upload to Firebase App Distribution
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
        run: |
          firebase appdistribution:distribute ${{ github.workspace }}/build/ConnectedToCulture.ipa \
            --app ${{ secrets.FIREBASE_IOS_APP_ID }} \
            --groups testers
